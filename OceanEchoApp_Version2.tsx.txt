// OceanEchoApp.tsx
//
// This is a standalone, ready-to-upload file containing the entire Ocean Echo App
// as a minimal, anonymous, PWA-ready web app using React (with hooks) and TypeScript.
// To use: Place this file as OceanEchoApp.tsx in your src/ directory in a Vite, CRA, or similar setup.
// You need: react, react-dom, react-router-dom, and a Quicksand font import in your public/index.html.
// Optionally, add manifest.json and icons for PWA support.

import React, { useState, useRef, useEffect } from "react";
import { BrowserRouter as Router, Routes, Route, useNavigate } from "react-router-dom";

// --- Types ---
interface BottleMessage {
  id: string;
  text?: string;
  voiceUrl?: string; // (future: base64 or blob URL for audio)
  images?: string[]; // base64 strings, up to 5
  createdAt: number;
}

// --- Storage Utils ---
const STORAGE_KEY = "ocean_echo_bottles";
function saveBottle(msg: BottleMessage) {
  const bottles = getAllBottles();
  bottles.push(msg);
  localStorage.setItem(STORAGE_KEY, JSON.stringify(bottles));
}
function getAllBottles(): BottleMessage[] {
  try {
    return JSON.parse(localStorage.getItem(STORAGE_KEY) || "[]");
  } catch {
    return [];
  }
}
function getRandomBottle(): BottleMessage | null {
  const bottles = getAllBottles();
  if (!bottles.length) return null;
  const idx = Math.floor(Math.random() * bottles.length);
  return bottles[idx];
}

// --- Ocean Background ---
const OceanBackground: React.FC = () => (
  <div
    style={{
      position: "fixed",
      zIndex: -1,
      width: "100vw",
      height: "100vh",
      left: 0,
      top: 0,
      background: "linear-gradient(to bottom, #79c2fa 0%, #145ea8 100%)",
      overflow: "hidden"
    }}
  >
    <svg style={{ position: "absolute", bottom: 0, left: 0, width: "100%" }} height="180" viewBox="0 0 1440 320">
      <path
        fill="#fff"
        fillOpacity="0.3"
        d="M0,224L48,208C96,192,192,160,288,149.3C384,139,480,149,576,176C672,203,768,245,864,240C960,235,1056,181,1152,176C1248,171,1344,213,1392,234.7L1440,256L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z"
      ></path>
    </svg>
  </div>
);

// --- Home Page ---
const Home: React.FC = () => {
  const navigate = useNavigate();
  return (
    <div style={{
      minHeight: "100vh",
      display: "flex",
      flexDirection: "column",
      alignItems: "center",
      justifyContent: "center",
      fontFamily: "'Quicksand', sans-serif"
    }}>
      <OceanBackground />
      <h1 style={{ color: "#fff", letterSpacing: 2, marginBottom: 40, textShadow: "0 2px 8px #0004" }}>
        Ocean Echo
      </h1>
      <div style={{ display: "flex", gap: 20 }}>
        <button
          onClick={() => navigate("/send")}
          style={{
            background: "#fff",
            color: "#145ea8",
            padding: "1em 2em",
            fontSize: "1.2em",
            borderRadius: 30,
            border: "none",
            boxShadow: "0 2px 8px #0002",
            cursor: "pointer"
          }}>
          Send a Bottle
        </button>
        <button
          onClick={() => navigate("/catch")}
          style={{
            background: "#fff",
            color: "#145ea8",
            padding: "1em 2em",
            fontSize: "1.2em",
            borderRadius: 30,
            border: "none",
            boxShadow: "0 2px 8px #0002",
            cursor: "pointer"
          }}>
          Catch a Bottle
        </button>
      </div>
    </div>
  );
};

// --- Send Bottle Page ---
const MAX_TEXT = 300;
const MAX_IMAGES = 5;

const SendBottle: React.FC = () => {
  const [text, setText] = useState("");
  const [images, setImages] = useState<string[]>([]);
  const [confirmation, setConfirmation] = useState(false);
  const fileInput = useRef<HTMLInputElement>(null);
  const navigate = useNavigate();
  // Voice note handling can be added here later

  function onImageUpload(e: React.ChangeEvent<HTMLInputElement>) {
    if (!e.target.files) return;
    const files = Array.from(e.target.files).slice(0, MAX_IMAGES - images.length);
    Promise.all(
      files.map(f => {
        return new Promise<string>((resolve, reject) => {
          const reader = new FileReader();
          reader.onload = () => resolve(reader.result as string);
          reader.onerror = () => reject();
          reader.readAsDataURL(f);
        });
      })
    ).then(newImgs => setImages(imgs => [...imgs, ...newImgs]));
  }

  function handleSubmit(e: React.FormEvent) {
    e.preventDefault();
    const msg: BottleMessage = {
      id: Date.now().toString(36) + Math.random().toString(36).slice(2),
      text,
      images,
      createdAt: Date.now(),
    };
    saveBottle(msg);
    setText("");
    setImages([]);
    setConfirmation(true);
    setTimeout(() => {
      setConfirmation(false);
      navigate("/");
    }, 2000);
  }

  return (
    <div style={{
      minHeight: "100vh",
      display: "flex",
      flexDirection: "column",
      alignItems: "center",
      justifyContent: "center",
      fontFamily: "'Quicksand', sans-serif"
    }}>
      <OceanBackground />
      <h2 style={{ color: "#fff", marginBottom: 24, textShadow: "0 2px 8px #0004" }}>Send a Bottle</h2>
      {confirmation ? (
        <div style={{
          background: "#fff",
          color: "#145ea8",
          padding: "2em",
          borderRadius: 20,
          boxShadow: "0 2px 8px #0002",
          fontSize: "1.2em"
        }}>
          Your bottle has been sent into the ocean.<br />
          Someone will find it.
        </div>
      ) : (
        <form onSubmit={handleSubmit}
          style={{
            background: "#fff9",
            padding: 32,
            borderRadius: 20,
            boxShadow: "0 2px 16px #0002",
            display: "flex",
            flexDirection: "column",
            gap: 20,
            width: 320,
            maxWidth: "90vw"
          }}>
          <textarea
            value={text}
            onChange={e => setText(e.target.value.slice(0, MAX_TEXT))}
            placeholder="Write your message here (max 300 characters)..."
            maxLength={MAX_TEXT}
            rows={5}
            style={{ borderRadius: 10, padding: 12, fontSize: 16, border: "1px solid #bdf" }}
            required
          />
          {/* Image upload */}
          <div>
            <label style={{ fontSize: 14, color: "#145ea8" }}>Upload profile photos (up to 5):</label>
            <input
              type="file"
              accept="image/*"
              multiple
              onChange={onImageUpload}
              ref={fileInput}
              style={{ display: "block", marginTop: 8 }}
              disabled={images.length >= MAX_IMAGES}
            />
            <div style={{ display: "flex", gap: 6, marginTop: 8 }}>
              {images.map((img, idx) => (
                <img key={idx} src={img} alt="profile" style={{ width: 40, height: 40, borderRadius: "50%", objectFit: "cover" }} />
              ))}
            </div>
          </div>
          {/* Voice note UI for future */}
          <button
            type="submit"
            style={{
              background: "#145ea8",
              color: "#fff",
              padding: "1em",
              borderRadius: 20,
              border: "none",
              fontSize: 16,
              cursor: "pointer"
            }}>
            Throw Bottle
          </button>
        </form>
      )}
    </div>
  );
};

// --- Catch Bottle Page ---
const CatchBottle: React.FC = () => {
  const [bottle, setBottle] = useState<BottleMessage | null>(null);
  const navigate = useNavigate();

  useEffect(() => {
    setBottle(getRandomBottle());
  }, []);

  return (
    <div style={{
      minHeight: "100vh",
      display: "flex",
      flexDirection: "column",
      alignItems: "center",
      justifyContent: "center",
      fontFamily: "'Quicksand', sans-serif"
    }}>
      <OceanBackground />
      <h2 style={{ color: "#fff", marginBottom: 24, textShadow: "0 2px 8px #0004" }}>Catch a Bottle</h2>
      {bottle ? (
        <div style={{
          background: "#fff9",
          padding: 32,
          borderRadius: 20,
          boxShadow: "0 2px 16px #0002",
          width: 320,
          maxWidth: "90vw",
          display: "flex",
          flexDirection: "column",
          alignItems: "center",
          gap: 20
        }}>
          {bottle.images && bottle.images.length > 0 && (
            <img
              src={bottle.images[Math.floor(Math.random() * bottle.images.length)]}
              alt="profile"
              style={{ width: 60, height: 60, borderRadius: "50%", objectFit: "cover" }}
            />
          )}
          {bottle.text && (
            <div style={{ fontSize: 18, color: "#145ea8", marginBottom: 8, textAlign: "center" }}>
              {bottle.text}
            </div>
          )}
          {bottle.voiceUrl && (
            <audio src={bottle.voiceUrl} controls style={{ width: "100%" }} />
          )}
          <button
            onClick={() => setBottle(getRandomBottle())}
            style={{
              marginTop: 20,
              background: "#145ea8",
              color: "#fff",
              padding: "0.7em 2em",
              borderRadius: 16,
              border: "none",
              fontSize: 15,
              cursor: "pointer"
            }}>
            Catch Another
          </button>
        </div>
      ) : (
        <div style={{
          background: "#fff9",
          padding: 32,
          borderRadius: 20,
          boxShadow: "0 2px 16px #0002",
          fontSize: "1.2em"
        }}>
          The ocean is calm... No bottles found yet.
        </div>
      )}
      <button
        onClick={() => navigate("/")}
        style={{
          marginTop: 32,
          background: "#fff",
          color: "#145ea8",
          border: "1px solid #145ea8",
          borderRadius: 18,
          padding: "0.5em 2em",
          fontSize: 15,
          cursor: "pointer"
        }}>
        Back Home
      </button>
    </div>
  );
};

// --- App Shell ---
const OceanEchoApp: React.FC = () => (
  <Router>
    <Routes>
      <Route path="/" element={<Home />} />
      <Route path="/send" element={<SendBottle />} />
      <Route path="/catch" element={<CatchBottle />} />
    </Routes>
  </Router>
);

export default OceanEchoApp;

// --- Index CSS instructions ---
// Add this to your src/index.css or global stylesheet:
//
// body {
//   margin: 0;
//   min-height: 100vh;
//   font-family: 'Quicksand', sans-serif;
//   background: #145ea8;
//   overflow-x: hidden;
// }
// input, textarea, button { font-family: inherit; }
//
// --- Font Loading ---
// Make sure your public/index.html includes:
// <link href="https://fonts.googleapis.com/css?family=Quicksand:wght@400;600&display=swap" rel="stylesheet">